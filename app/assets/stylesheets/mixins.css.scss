@mixin one-column {
  @media only screen and (max-width: 639px) {
    @content;
  }
}

@mixin two-columns {
   @media only screen and (min-width: 640px) and (max-width: 959px) {
  //@media only screen and (min-width: 710px) and (max-width: 1029px) {
    @content;
  }
}

@mixin ipad-landscape {
   @media only screen and (min-width: 959px) and (max-width: 1390px) {
    @content;
  }
}

@mixin four-columns {
  // @media only screen and (min-width: 1280px) {
  @media only screen and (min-width: 1350px) {
    @content;
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}

@mixin max-width-media($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}

@mixin retina-media() {
  @media (min--moz-device-pixel-ratio: 1.3), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
    @content;
  }
}

@mixin filter($properties) {
  -webkit-filter: $properties;
  -moz-filter: $properties;
  filter: $properties;
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin animation($name, $duration, $loop: infinite, $transition: linear, $direction: normal, $delay: 0s) {
  animation: $name $duration $loop $transition $direction;
  -ms-animation: $name $duration $loop $transition $direction;
  -moz-animation: $name $duration $loop $transition $direction;
  -webkit-animation: $name $duration $loop $transition $direction;

  animation-delay: $delay;
  -ms-animation-delay: $delay;
  -moz-animation-delay: $delay;
  -webkit-animation-delay: $delay;
}

@mixin text-shadow ($val) {
  text-shadow: $val;
  -webkit-text-shadow: $val;
  -moz-text-shadow: $val;
  -o-text-shadow: $val;
}

@mixin appearance ($value: none) {
  appearance: $value;
  -moz-appearance: $value;
  -webkit-appearance: $value;
}

@mixin border-radius ($radius) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -o-border-radius: $radius;
}

@mixin background-clip ($clip) {
  background-clip: $clip !important;
  -webkit-background-clip: $clip !important;
  -moz-background-clip: $clip !important;
  -o-background-clip: $clip !important;
  -ms-background-clip: $clip !important;
}

@mixin box-sizing ($sizing: border-box) {
  box-sizing: $sizing;
  -webkit-box-sizing: $sizing;
  -moz-box-sizing: $sizing;
  -o-box-sizing: $sizing;
  -ms-box-sizing: $sizing;
}

@mixin box-shadow ($val) {
  box-shadow: $val;
  -webkit-box-shadow: $val;
  -moz-box-shadow: $val;
  -o-box-shadow: $val;
}

@mixin transition ($properties) {
  transition: $properties;
  -webkit-transition: $properties;
  -moz-transition: $properties;
  -o-transition: $properties;
  -ms-transition: $properties;
}

@mixin transform ($properties) {
  transform: $properties;
  -webkit-transform: $properties;
  -moz-transform: $properties;
  -o-transform: $properties;
  -ms-transform: $properties;
}

@mixin transform-origin($properties) {
  transform-origin: $properties;
  -webkit-transform-origin: $properties;
  -moz-transform-origin: $properties;
  -ms-transform-origin: $properties;
  -o-transform-origin: $properties;
}

@mixin background-y ($top, $bottom, $fallback: transparent) {
  background-color: $fallback;
  background-image: -webkit-gradient(linear, left top, left bottom, from($top), to($bottom));
  background-image: -webkit-linear-gradient($top, $bottom);
  background-image: -moz-linear-gradient(center top, $top 0%, $bottom 100%);
  background-image: -moz-gradient(center top, $top 0%, $bottom 100%);
  background-image: -o-linear-gradient(top, $top 0%, $bottom 100%);
  background-image: -ms-linear-gradient(top, $top 0%, $bottom 100%);
}

@mixin background-y-image ($top, $bottom, $image, $fallback) {
  background-color: $fallback;
  background-image: $image;
  background-image: $image, -webkit-gradient(linear, left top, left bottom, from($top), to($bottom));
  background-image: $image, -webkit-linear-gradient($top, $bottom);
  background-image: $image, -moz-linear-gradient(center top, $top 0%, $bottom 100%);
  background-image: $image, -moz-gradient(center top, $top 0%, $bottom 100%);
  background-image: $image, -o-linear-gradient(top, $top 0%, $bottom 100%);
  background-image: $image, -ms-linear-gradient(top, $top 0%, $bottom 100%);
}

@mixin background-y-multi ($fallback: transparent, $val1: none, $val2: none, $val3: none, $val4: none, $val5: none) {
  $val: $val1, $val2, $val3, $val4, $val5;

  @if $val5 == none {
    $val: $val1, $val2, $val3, $val4;
  }
  @if $val4 == none {
    $val: $val1, $val2, $val3;
  }
  @if $val3 == none {
    $val: $val1, $val2;
  }
  @if $val2 == none {
    $val: $val1;
  }

  background: $fallback;
  background-image: -webkit-linear-gradient($val);
  background-image: -moz-linear-gradient(center top, $val);
  background-image: -moz-gradient(center top, $val);
  background-image: -o-linear-gradient(center top, $val);
  background-image: -ms-linear-gradient(center top, $val);
  background-image: linear-gradient(top, $val);
}

@mixin opacity ($opacity) {
  $ieval: $opacity * 100;

  zoom: 1;
  opacity: $opacity;
  -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$ieval})";
  filter: alpha(opacity=$ieval);
}

@mixin user-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin font-size($size: 16) {
  font-size: ($size) + px;
  font-size: ($size / 16) + rem;
}

@function calc-percent($target-width, $container-width) {
  @return ($target-width / $container-width) * 100%;
}

@mixin hide-text {
  overflow: hidden;

  &:before {
    content: "";
    display: block;
    width: 0;
    height: 100%;
  }
}

@mixin clearfix {
  &:after {
    content:"";
    display:table;
    clear:both;
  }
}
